{"ast":null,"code":"var _jsxFileName = \"D:\\\\SIH prototype\\\\Frontend\\\\src\\\\components\\\\ProtectedRoute.tsx\",\n  _s = $RefreshSig$();\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute({\n  children\n}) {\n  _s();\n  const {\n    user,\n    isAuthenticated\n  } = useAuth();\n  const location = useLocation();\n  if (!isAuthenticated || !user) {\n    // Redirect them to the /user-type page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login, which is a nicer user experience\n    // than dropping them off on the home page.\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/user-type\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n}\n_s(ProtectedRoute, \"N+lJalCaxsy/KIGLNcP66zKeeR4=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","useLocation","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","user","isAuthenticated","location","to","state","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/SIH prototype/Frontend/src/components/ProtectedRoute.tsx"],"sourcesContent":["import { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nexport default function ProtectedRoute({ children }: { children: JSX.Element }) {\n  const { user, isAuthenticated } = useAuth();\n  const location = useLocation();\n\n  if (!isAuthenticated || !user) {\n    // Redirect them to the /user-type page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login, which is a nicer user experience\n    // than dropping them off on the home page.\n    return <Navigate to=\"/user-type\" state={{ from: location }} replace />;\n  }\n\n  return children;\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,cAAcA,CAAC;EAAEC;AAAoC,CAAC,EAAE;EAAAC,EAAA;EAC9E,MAAM;IAAEC,IAAI;IAAEC;EAAgB,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC3C,MAAMQ,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,IAAI,CAACQ,eAAe,IAAI,CAACD,IAAI,EAAE;IAC7B;IACA;IACA;IACA;IACA,oBAAOJ,OAAA,CAACJ,QAAQ;MAACW,EAAE,EAAC,YAAY;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEH;MAAS,CAAE;MAACI,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACxE;EAEA,OAAOZ,QAAQ;AACjB;AAACC,EAAA,CAbuBF,cAAc;EAAA,QACFH,OAAO,EACxBD,WAAW;AAAA;AAAAkB,EAAA,GAFNd,cAAc;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}