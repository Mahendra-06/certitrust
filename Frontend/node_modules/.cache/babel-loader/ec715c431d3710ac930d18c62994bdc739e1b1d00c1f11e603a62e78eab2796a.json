{"ast":null,"code":"import _objectSpread from\"D:/SIH prototype/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);// Key for storing users in localStorage\nconst USERS_STORAGE_KEY='registered_users';export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const navigate=useNavigate();// Initialize users in localStorage if not exists\nuseEffect(()=>{if(!localStorage.getItem(USERS_STORAGE_KEY)){localStorage.setItem(USERS_STORAGE_KEY,JSON.stringify([]));}// Check for logged in user\nconst storedUser=localStorage.getItem('current_user');if(storedUser){try{setUser(JSON.parse(storedUser));}catch(error){console.error('Failed to parse user data from localStorage',error);localStorage.removeItem('current_user');}}setIsLoading(false);},[]);const getUsers=()=>{const users=localStorage.getItem(USERS_STORAGE_KEY);return users?JSON.parse(users):[];};const login=async(email,password)=>{try{setIsLoading(true);setError(null);// Get all registered users\nconst users=getUsers();// Check if email exists\nconst user=users.find(u=>u.email===email);if(!user){return{success:false,message:'This email is not registered. Please register first.'};}// Check password\nif(user.password!==password){return{success:false,message:'Invalid password. Please try again.'};}setUser(user);localStorage.setItem('current_user',JSON.stringify(user));return{success:true,message:'Login successful'};}catch(err){console.error('Login error:',err);return{success:false,message:'An error occurred during login. Please try again.'};}finally{setIsLoading(false);}};const register=async userData=>{try{setIsLoading(true);setError(null);// Simulate API call\nawait new Promise(resolve=>setTimeout(resolve,500));const users=getUsers();// Check if user already exists\nconst userExists=users.some(u=>u.email===userData.email);if(userExists){return{success:false,message:'Email already registered. Please log in instead.'};}const newUser=_objectSpread(_objectSpread({},userData),{},{id:Date.now().toString()});// Save new user to registered users\nconst updatedUsers=[...users,newUser];localStorage.setItem(USERS_STORAGE_KEY,JSON.stringify(updatedUsers));// Log the user in\nsetUser(newUser);localStorage.setItem('current_user',JSON.stringify(newUser));return{success:true,message:'Registration successful! You are now logged in.'};}catch(err){console.error('Registration error:',err);return{success:false,message:'An error occurred during registration. Please try again.'};}finally{setIsLoading(false);}};const logout=()=>{setUser(null);localStorage.removeItem('current_user');navigate('/');};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,isAuthenticated:!!user,isLoading,error,login,register,logout},children:!isLoading&&children});};export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","jsx","_jsx","AuthContext","undefined","USERS_STORAGE_KEY","AuthProvider","_ref","children","user","setUser","isLoading","setIsLoading","error","setError","navigate","localStorage","getItem","setItem","JSON","stringify","storedUser","parse","console","removeItem","getUsers","users","login","email","password","find","u","success","message","err","register","userData","Promise","resolve","setTimeout","userExists","some","newUser","_objectSpread","id","Date","now","toString","updatedUsers","logout","Provider","value","isAuthenticated","useAuth","context","Error"],"sources":["D:/SIH prototype/Frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\ntype User = {\n  id: string;\n  name: string;\n  email: string;\n  role: string;\n  password: string;\n  organization?: string;\n  phone?: string;\n  avatar?: string; // Add optional avatar property\n};\n\ntype AuthContextType = {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n  login: (email: string, password: string) => Promise<{ success: boolean; message: string }>;\n  register: (userData: Omit<User, 'id'>) => Promise<{ success: boolean; message: string }>;\n  logout: () => void;\n};\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Key for storing users in localStorage\nconst USERS_STORAGE_KEY = 'registered_users';\n\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const navigate = useNavigate();\n\n  // Initialize users in localStorage if not exists\n  useEffect(() => {\n    if (!localStorage.getItem(USERS_STORAGE_KEY)) {\n      localStorage.setItem(USERS_STORAGE_KEY, JSON.stringify([]));\n    }\n    \n    // Check for logged in user\n    const storedUser = localStorage.getItem('current_user');\n    if (storedUser) {\n      try {\n        setUser(JSON.parse(storedUser));\n      } catch (error) {\n        console.error('Failed to parse user data from localStorage', error);\n        localStorage.removeItem('current_user');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n\n  const getUsers = (): User[] => {\n    const users = localStorage.getItem(USERS_STORAGE_KEY);\n    return users ? JSON.parse(users) : [];\n  };\n\n  const login = async (email: string, password: string) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Get all registered users\n      const users = getUsers();\n      \n      // Check if email exists\n      const user = users.find((u: User) => u.email === email);\n      \n      if (!user) {\n        return { \n          success: false, \n          message: 'This email is not registered. Please register first.'\n        };\n      }\n      \n      // Check password\n      if (user.password !== password) {\n        return { \n          success: false, \n          message: 'Invalid password. Please try again.'\n        };\n      }\n\n      setUser(user);\n      localStorage.setItem('current_user', JSON.stringify(user));\n      \n      return { success: true, message: 'Login successful' };\n    } catch (err) {\n      console.error('Login error:', err);\n      return { \n        success: false, \n        message: 'An error occurred during login. Please try again.' \n      };\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const register = async (userData: Omit<User, 'id'>) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Simulate API call\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      const users = getUsers();\n      \n      // Check if user already exists\n      const userExists = users.some((u: User) => u.email === userData.email);\n      if (userExists) {\n        return { \n          success: false, \n          message: 'Email already registered. Please log in instead.' \n        };\n      }\n      \n      const newUser: User = {\n        ...userData,\n        id: Date.now().toString(),\n      };\n      \n      // Save new user to registered users\n      const updatedUsers = [...users, newUser];\n      localStorage.setItem(USERS_STORAGE_KEY, JSON.stringify(updatedUsers));\n      \n      // Log the user in\n      setUser(newUser);\n      localStorage.setItem('current_user', JSON.stringify(newUser));\n      \n      return { \n        success: true, \n        message: 'Registration successful! You are now logged in.' \n      };\n    } catch (err) {\n      console.error('Registration error:', err);\n      return { \n        success: false, \n        message: 'An error occurred during registration. Please try again.' \n      };\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('current_user');\n    navigate('/');\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user,\n        isAuthenticated: !!user,\n        isLoading,\n        error,\n        login,\n        register,\n        logout,\n      }}\n    >\n      {!isLoading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"8GAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAmB,OAAO,CACxF,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAuB/C,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAA8BQ,SAAS,CAAC,CAEzE;AACA,KAAM,CAAAC,iBAAiB,CAAG,kBAAkB,CAE5C,MAAO,MAAM,CAAAC,YAA+C,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC1E,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAc,IAAI,CAAC,CACnD,KAAM,CAACa,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACe,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAAgB,IAAI,CAAC,CACvD,KAAM,CAAAiB,QAAQ,CAAGf,WAAW,CAAC,CAAC,CAE9B;AACAD,SAAS,CAAC,IAAM,CACd,GAAI,CAACiB,YAAY,CAACC,OAAO,CAACZ,iBAAiB,CAAC,CAAE,CAC5CW,YAAY,CAACE,OAAO,CAACb,iBAAiB,CAAEc,IAAI,CAACC,SAAS,CAAC,EAAE,CAAC,CAAC,CAC7D,CAEA;AACA,KAAM,CAAAC,UAAU,CAAGL,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CACvD,GAAII,UAAU,CAAE,CACd,GAAI,CACFX,OAAO,CAACS,IAAI,CAACG,KAAK,CAACD,UAAU,CAAC,CAAC,CACjC,CAAE,MAAOR,KAAK,CAAE,CACdU,OAAO,CAACV,KAAK,CAAC,6CAA6C,CAAEA,KAAK,CAAC,CACnEG,YAAY,CAACQ,UAAU,CAAC,cAAc,CAAC,CACzC,CACF,CACAZ,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAa,QAAQ,CAAGA,CAAA,GAAc,CAC7B,KAAM,CAAAC,KAAK,CAAGV,YAAY,CAACC,OAAO,CAACZ,iBAAiB,CAAC,CACrD,MAAO,CAAAqB,KAAK,CAAGP,IAAI,CAACG,KAAK,CAACI,KAAK,CAAC,CAAG,EAAE,CACvC,CAAC,CAED,KAAM,CAAAC,KAAK,CAAG,KAAAA,CAAOC,KAAa,CAAEC,QAAgB,GAAK,CACvD,GAAI,CACFjB,YAAY,CAAC,IAAI,CAAC,CAClBE,QAAQ,CAAC,IAAI,CAAC,CAEd;AACA,KAAM,CAAAY,KAAK,CAAGD,QAAQ,CAAC,CAAC,CAExB;AACA,KAAM,CAAAhB,IAAI,CAAGiB,KAAK,CAACI,IAAI,CAAEC,CAAO,EAAKA,CAAC,CAACH,KAAK,GAAKA,KAAK,CAAC,CAEvD,GAAI,CAACnB,IAAI,CAAE,CACT,MAAO,CACLuB,OAAO,CAAE,KAAK,CACdC,OAAO,CAAE,sDACX,CAAC,CACH,CAEA;AACA,GAAIxB,IAAI,CAACoB,QAAQ,GAAKA,QAAQ,CAAE,CAC9B,MAAO,CACLG,OAAO,CAAE,KAAK,CACdC,OAAO,CAAE,qCACX,CAAC,CACH,CAEAvB,OAAO,CAACD,IAAI,CAAC,CACbO,YAAY,CAACE,OAAO,CAAC,cAAc,CAAEC,IAAI,CAACC,SAAS,CAACX,IAAI,CAAC,CAAC,CAE1D,MAAO,CAAEuB,OAAO,CAAE,IAAI,CAAEC,OAAO,CAAE,kBAAmB,CAAC,CACvD,CAAE,MAAOC,GAAG,CAAE,CACZX,OAAO,CAACV,KAAK,CAAC,cAAc,CAAEqB,GAAG,CAAC,CAClC,MAAO,CACLF,OAAO,CAAE,KAAK,CACdC,OAAO,CAAE,mDACX,CAAC,CACH,CAAC,OAAS,CACRrB,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAED,KAAM,CAAAuB,QAAQ,CAAG,KAAO,CAAAC,QAA0B,EAAK,CACrD,GAAI,CACFxB,YAAY,CAAC,IAAI,CAAC,CAClBE,QAAQ,CAAC,IAAI,CAAC,CAEd;AACA,KAAM,IAAI,CAAAuB,OAAO,CAACC,OAAO,EAAIC,UAAU,CAACD,OAAO,CAAE,GAAG,CAAC,CAAC,CAEtD,KAAM,CAAAZ,KAAK,CAAGD,QAAQ,CAAC,CAAC,CAExB;AACA,KAAM,CAAAe,UAAU,CAAGd,KAAK,CAACe,IAAI,CAAEV,CAAO,EAAKA,CAAC,CAACH,KAAK,GAAKQ,QAAQ,CAACR,KAAK,CAAC,CACtE,GAAIY,UAAU,CAAE,CACd,MAAO,CACLR,OAAO,CAAE,KAAK,CACdC,OAAO,CAAE,kDACX,CAAC,CACH,CAEA,KAAM,CAAAS,OAAa,CAAAC,aAAA,CAAAA,aAAA,IACdP,QAAQ,MACXQ,EAAE,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAC1B,CAED;AACA,KAAM,CAAAC,YAAY,CAAG,CAAC,GAAGtB,KAAK,CAAEgB,OAAO,CAAC,CACxC1B,YAAY,CAACE,OAAO,CAACb,iBAAiB,CAAEc,IAAI,CAACC,SAAS,CAAC4B,YAAY,CAAC,CAAC,CAErE;AACAtC,OAAO,CAACgC,OAAO,CAAC,CAChB1B,YAAY,CAACE,OAAO,CAAC,cAAc,CAAEC,IAAI,CAACC,SAAS,CAACsB,OAAO,CAAC,CAAC,CAE7D,MAAO,CACLV,OAAO,CAAE,IAAI,CACbC,OAAO,CAAE,iDACX,CAAC,CACH,CAAE,MAAOC,GAAG,CAAE,CACZX,OAAO,CAACV,KAAK,CAAC,qBAAqB,CAAEqB,GAAG,CAAC,CACzC,MAAO,CACLF,OAAO,CAAE,KAAK,CACdC,OAAO,CAAE,0DACX,CAAC,CACH,CAAC,OAAS,CACRrB,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAED,KAAM,CAAAqC,MAAM,CAAGA,CAAA,GAAM,CACnBvC,OAAO,CAAC,IAAI,CAAC,CACbM,YAAY,CAACQ,UAAU,CAAC,cAAc,CAAC,CACvCT,QAAQ,CAAC,GAAG,CAAC,CACf,CAAC,CAED,mBACEb,IAAA,CAACC,WAAW,CAAC+C,QAAQ,EACnBC,KAAK,CAAE,CACL1C,IAAI,CACJ2C,eAAe,CAAE,CAAC,CAAC3C,IAAI,CACvBE,SAAS,CACTE,KAAK,CACLc,KAAK,CACLQ,QAAQ,CACRc,MACF,CAAE,CAAAzC,QAAA,CAED,CAACG,SAAS,EAAIH,QAAQ,CACH,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAA6C,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGzD,UAAU,CAACM,WAAW,CAAC,CACvC,GAAImD,OAAO,GAAKlD,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAmD,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}