{"ast":null,"code":"var _jsxFileName = \"D:\\\\SIH prototype\\\\Frontend\\\\src\\\\components\\\\ProtectedRoute.tsx\",\n  _s = $RefreshSig$();\nimport { Navigate, useLocation, useParams } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute({\n  children,\n  allowedRoles\n}) {\n  _s();\n  const {\n    user,\n    isAuthenticated,\n    isLoading\n  } = useAuth();\n  const location = useLocation();\n  const {\n    userType\n  } = useParams();\n\n  // Show loading state while checking auth\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center min-h-screen\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If not authenticated, redirect to login\n  if (!isAuthenticated || !user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/user-type\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if the user's role has access to this route\n  const hasRequiredRole = allowedRoles ? allowedRoles.includes(user.role) : true;\n  const isMatchingRoute = !userType || user.role === userType;\n\n  // If role doesn't match, redirect to the appropriate dashboard\n  if (!isMatchingRoute) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/dashboard/${user.role}`,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If role is not allowed, show access denied\n  if (!hasRequiredRole) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center min-h-screen p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative max-w-md w-full text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"font-bold\",\n          children: \"Access Denied! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"block sm:inline\",\n          children: \"You don't have permission to access this page.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.history.back(),\n        className: \"mt-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If all checks pass, render the protected content\n  return children;\n}\n_s(ProtectedRoute, \"jomr0cpV1gfuicP20/aiedDNmOI=\", false, function () {\n  return [useAuth, useLocation, useParams];\n});\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Navigate","useLocation","useParams","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","_s","user","isAuthenticated","isLoading","location","userType","className","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","hasRequiredRole","includes","role","isMatchingRoute","onClick","window","history","back","_c","$RefreshReg$"],"sources":["D:/SIH prototype/Frontend/src/components/ProtectedRoute.tsx"],"sourcesContent":["import { Navigate, useLocation, useParams } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\ntype ProtectedRouteProps = {\n  children: JSX.Element;\n  allowedRoles?: string[];\n};\n\nexport default function ProtectedRoute({ children, allowedRoles }: ProtectedRouteProps) {\n  const { user, isAuthenticated, isLoading } = useAuth();\n  const location = useLocation();\n  const { userType } = useParams<{ userType?: string }>();\n\n  // Show loading state while checking auth\n  if (isLoading) {\n    return <div className=\"flex justify-center items-center min-h-screen\">Loading...</div>;\n  }\n\n  // If not authenticated, redirect to login\n  if (!isAuthenticated || !user) {\n    return <Navigate to=\"/user-type\" state={{ from: location }} replace />;\n  }\n\n  // Check if the user's role has access to this route\n  const hasRequiredRole = allowedRoles ? allowedRoles.includes(user.role) : true;\n  const isMatchingRoute = !userType || user.role === userType;\n\n  // If role doesn't match, redirect to the appropriate dashboard\n  if (!isMatchingRoute) {\n    return <Navigate to={`/dashboard/${user.role}`} replace />;\n  }\n\n  // If role is not allowed, show access denied\n  if (!hasRequiredRole) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-screen p-4\">\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative max-w-md w-full text-center\">\n          <strong className=\"font-bold\">Access Denied! </strong>\n          <span className=\"block sm:inline\">You don't have permission to access this page.</span>\n        </div>\n        <button\n          onClick={() => window.history.back()}\n          className=\"mt-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n        >\n          Go Back\n        </button>\n      </div>\n    );\n  }\n\n  // If all checks pass, render the protected content\n  return children;\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACnE,SAASC,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOlD,eAAe,SAASC,cAAcA,CAAC;EAAEC,QAAQ;EAAEC;AAAkC,CAAC,EAAE;EAAAC,EAAA;EACtF,MAAM;IAAEC,IAAI;IAAEC,eAAe;IAAEC;EAAU,CAAC,GAAGT,OAAO,CAAC,CAAC;EACtD,MAAMU,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEa;EAAS,CAAC,GAAGZ,SAAS,CAAwB,CAAC;;EAEvD;EACA,IAAIU,SAAS,EAAE;IACb,oBAAOP,OAAA;MAAKU,SAAS,EAAC,+CAA+C;MAAAR,QAAA,EAAC;IAAU;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACxF;;EAEA;EACA,IAAI,CAACR,eAAe,IAAI,CAACD,IAAI,EAAE;IAC7B,oBAAOL,OAAA,CAACL,QAAQ;MAACoB,EAAE,EAAC,YAAY;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAET;MAAS,CAAE;MAACU,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACxE;;EAEA;EACA,MAAMK,eAAe,GAAGhB,YAAY,GAAGA,YAAY,CAACiB,QAAQ,CAACf,IAAI,CAACgB,IAAI,CAAC,GAAG,IAAI;EAC9E,MAAMC,eAAe,GAAG,CAACb,QAAQ,IAAIJ,IAAI,CAACgB,IAAI,KAAKZ,QAAQ;;EAE3D;EACA,IAAI,CAACa,eAAe,EAAE;IACpB,oBAAOtB,OAAA,CAACL,QAAQ;MAACoB,EAAE,EAAE,cAAcV,IAAI,CAACgB,IAAI,EAAG;MAACH,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5D;;EAEA;EACA,IAAI,CAACK,eAAe,EAAE;IACpB,oBACEnB,OAAA;MAAKU,SAAS,EAAC,4DAA4D;MAAAR,QAAA,gBACzEF,OAAA;QAAKU,SAAS,EAAC,sGAAsG;QAAAR,QAAA,gBACnHF,OAAA;UAAQU,SAAS,EAAC,WAAW;UAAAR,QAAA,EAAC;QAAe;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtDd,OAAA;UAAMU,SAAS,EAAC,iBAAiB;UAAAR,QAAA,EAAC;QAA8C;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpF,CAAC,eACNd,OAAA;QACEuB,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,CAAE;QACrChB,SAAS,EAAC,2EAA2E;QAAAR,QAAA,EACtF;MAED;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV;;EAEA;EACA,OAAOZ,QAAQ;AACjB;AAACE,EAAA,CA5CuBH,cAAc;EAAA,QACSH,OAAO,EACnCF,WAAW,EACPC,SAAS;AAAA;AAAA8B,EAAA,GAHR1B,cAAc;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}